---
# file: roles/gpg_keys/tasks/main.yml

#
# Deploys administrative GPG public keys
#
# You must have the keys in your local GnuPG keyring before applying this role.
#

- name: Validate the given administrative GPG public key ids and timestamps
  with_items: trusted_gpg_public_keys
  when: not (
        item.email      |match("^[0-9A-Za-z+.,_-]+@[0-9A-Za-z-]+\.[0-9A-Za-z.-]+$") and
        item.fingerprint|match("^[0-9A-F]{40}$") and
        item.created    |match("^[0-9]{4}-[0-9]{2}-[0-9]{2}$")
        )
  local_action: command echo Invalid GPG key entry
                email=\"{{ item.email }}\"
                fingerprint=\"{{ item.fingerprint }}\"
                created=\"{{ item.created }}\"
  failed_when: True

- name: Export trusted GPG public keys from local GnuPG keyring
  with_items: trusted_gpg_public_keys
  local_action: command gpg --armor --export "{{ item.email | mandatory }}"
  register: gnupg_exported_keys
  changed_when: False
  failed_when: gnupg_exported_keys.stderr.strip() != "" or
               gnupg_exported_keys.stdout.strip() == ""

- name: Ensure ~/.gnupg/ exists
  file: state=directory path=~/.gnupg mode=700

- name: Write the GPG public keys to files
  with_items: gnupg_exported_keys.results
  copy: dest="~/.gnupg/{{ item.item.email }}_{{ item.item.created | mandatory }}_pub.asc"
        content="{{ item.stdout }}"

- name: Import GPG public keys
  with_items: gnupg_exported_keys.results
  command: chdir="~/.gnupg"
           gpg --import "{{ item.item.email }}_{{ item.item.created | mandatory }}_pub.asc"
  register: gnupg_imported_keys
  changed_when: ("imported" in gnupg_imported_keys.stderr)
  failed_when: (gnupg_imported_keys.rc != 0) or
               (not "processed" in gnupg_imported_keys.stderr)

#
# The value of 6 when importing ownertrust corresponds to 5 ('ultimate') in the
# menu of command: gpg --edit-key trust
#
- name: Trust the GPG public keys imported above
  with_items: gnupg_exported_keys.results
  shell: echo "{{ item.item.fingerprint | mandatory }}:6:"
         | gpg --import-ownertrust
  register: gnupg_ownertrust
  changed_when: gnupg_ownertrust.stderr.strip() != ""
