# file: roles/hetzner_single_ips/tasks/main.yml
#
# Collects additional single IPs allocated to a Hetzner dedicated root server
# for use with virtualization. Makes sure every IP has a separate MAC assigned.
#
# Before applying this role, the host variables file for each server must exist
# in the target Ansible repository, at:
#
# <target repository>/host_vars/<hypervisor ip>
#
# This role will add the single IPs and their MAC addresses to the said file.
#
---

- name: Query a list of server single IPs
  local_action: command curl -su '{{ hetzner_api_user | mandatory }}:{{ hetzner_api_password | mandatory }}'
                {{ hetzner_api_url }}/ip?server_ip={{ inventory_hostname }}
  register: hetzner_ips_result
  changed_when: False

- name: Obtain the server IPs
  when: hetzner_ips_result|success and inventory_hostname ==
        (hetzner_ips_result.stdout|from_json)[0].ip.server_ip
  set_fact: hetzner_ips="{{ hetzner_ips_result.stdout|from_json }}"

#
# Makes the hetzner_ips available with the following data structure:
#
# [
#     {
#         "ip": {
#             "ip": "203.0.113.24",
#             "locked": false,
#             "separate_mac": "00:53:56:00:4A:C5",
#             "server_ip": "203.0.113.1",
#             "server_number": 987654,
#             "traffic_daily": 2000,
#             "traffic_hourly": 200,
#             "traffic_monthly": 20,
#             "traffic_warnings": false
#         }
#     },
#     ...
# ]
#

#
# mac_requested.changed will be true, if any MAC is requested (not skipped)
#
- name: Request a separate MAC for every single IP that is still missing one
  with_items: "{{ hetzner_ips }}"
  when: (item.ip.ip != item.ip.server_ip) and (item.ip.separate_mac == None)
  local_action: command curl -X PUT -u '{{ hetzner_api_user | mandatory }}:{{ hetzner_api_password | mandatory }}'
                {{ hetzner_api_url }}/ip/{{ item.ip.ip }}/mac
  changed_when: true
  register: mac_requested

- name: Query the list of single IPs again to collect the MACs
  when: mac_requested|changed
  local_action: command curl -u '{{ hetzner_api_user | mandatory }}:{{ hetzner_api_password | mandatory }}'
                {{ hetzner_api_url }}/ip?server_ip={{ inventory_hostname }}
  register: hetzner_ips_result
  changed_when: False

- name: Obtain the server IPs and MACs
  when: mac_requested|changed and hetzner_ips_result|success and
        inventory_hostname == (hetzner_ips_result.stdout|from_json)[0].ip.server_ip
  become: yes
  set_fact: hetzner_ips=hetzner_ips_result.stdout|from_json

- name: Declare the hetzner_single_ips variable in target repository host_vars
  local_action: >
                lineinfile dest="{{ inventory_dir }}/host_vars/{{ hostvars[inventory_hostname].hostname }}"
                regexp="^hetzner_single_ips:"
                line="hetzner_single_ips:"

- name: Add the Hetzner single IPs and their corresponding MAC addresses
  when: item.ip.separate_mac != None
  with_items: "{{ hetzner_ips }}"
  local_action: >
                lineinfile dest="{{ inventory_dir }}/host_vars/{{ hostvars[inventory_hostname].hostname }}"
                insertafter="hetzner_single_ips"
                regexp="^  - { ip: '{{ item.ip.ip }}'"
                line="  - { ip: '{{ item.ip.ip | mandatory }}', mac: '{{ item.ip.separate_mac | mandatory }}' }"
