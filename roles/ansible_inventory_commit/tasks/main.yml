# file: roles/ansible_inventory_commit/tasks/main.yml
#
# Commits changes to the target Ansible inventory.
#
---

- name: Create a temporary file for target inventories
  run_once: yes
  local_action:
    module: lineinfile
    dest: "/tmp/target_inventories"
    create: yes
    regexp: "^target_inventories:$"
    line: "target_inventories:"
    state: "present"
  changed_when: False

- name: List hypervisor target inventories in the temporary file
  local_action:
    module: lineinfile
    dest: "/tmp/target_inventories"
    regexp: "^ - \\{ file: '{{ target_ansible_inventory }}' \\}$"
    line: " - { file: '{{ target_ansible_inventory }}' }"
    state: "present"
  changed_when: False

- name: List guest target inventories in the temporary file
  with_items: "{{ groups[ libvirt_guests_group ] }}"
  local_action:
    module: lineinfile
    dest: "/tmp/target_inventories"
    regexp: "^ - \\{ file: '{{ hostvars[item].target_ansible_inventory }}' \\}$"
    line: " - { file: '{{ hostvars[item].target_ansible_inventory }}' }"
    state: "present"
  changed_when: False

- name: Load the list of target inventories from the temporary file
  run_once: yes
  local_action:
    module: include_vars
    file: "/tmp/target_inventories"
  changed_when: False

- name: Delete the target inventories temporary file
  run_once: yes
  local_action:
    module: file
    dest: "/tmp/target_inventories"
    state: "absent"
  changed_when: False

- name: Check if the target inventories have changed
  run_once: yes
  with_items: "{{ target_inventories }}"
  local_action: command chdir="{{ inventory_dir }}"
                git status --porcelain {{ item.file }}
  register: inventories
  changed_when: inventories is defined and "{{ item.file }}" in inventories.stdout

- name: Add target inventory changes to git commit index
  run_once: yes
  with_items: "{{ inventories.results }}"
  local_action: command chdir="{{ inventory_dir }}"
                git add {{ item.item.file }}
  when: item|changed

- name: Create a temporary file for managed nodes
  run_once: yes
  local_action: lineinfile dest="/tmp/managed_nodes" create=yes
                regexp="^managed_nodes:$"
                line="managed_nodes:"
                state=present
  changed_when: False

- name: List managed hypervisors in the temporary file
  local_action:
    module: lineinfile
    dest: "/tmp/managed_nodes"
    regexp: "^ - \\{ host: '{{ hostvars[inventory_hostname].hostname }}' \\}$"
    line: " - { host: '{{ hostvars[inventory_hostname].hostname }}' }"
    state: present
  changed_when: False

- name: List managed guests in the temporary file
  with_items: "{{ groups[ libvirt_guests_group ] }}"
  local_action:
    module: lineinfile
    dest: "/tmp/managed_nodes"
    regexp: "^ - \\{ host: '{{ item }}' \\}$"
    line: " - { host: '{{ item }}' }"
    state: "present"
  changed_when: False

- name: Load the list of managed nodes from the temporary file
  run_once: yes
  local_action:
    module: include_vars
    file: "/tmp/managed_nodes"
  changed_when: False

- name: Delete the managed nodes temporary file
  run_once: yes
  local_action: file dest="/tmp/managed_nodes" state="absent"
  changed_when: False

- name: Check if the managed node host_vars have changed
  run_once: yes
  with_items: "{{ managed_nodes }}"
  local_action: command chdir="{{ inventory_dir }}"
                git status --porcelain host_vars/{{ item.host }}
  register: managed_host_vars
  changed_when: managed_host_vars is defined and "{{ item.host }}" in managed_host_vars.stdout

- name: Add managed node host_vars changes to git commit index
  run_once: yes
  with_items: "{{ managed_host_vars.results }}"
  when: item|changed
  local_action: command chdir="{{ inventory_dir }}"
                git add host_vars/{{ item.item.host }}

- name: Check if the target repository was changed
  run_once: yes
  local_action: shell chdir="{{ inventory_dir }}"
                git status --porcelain | grep '^[AM]' | cut -c4-
  register: repo_status
  changed_when: repo_status is defined and repo_status.stdout.strip() != ""

- name: Commit target repository changes
  run_once: yes
  when: repo_status|changed
  local_action: command chdir='{{ inventory_dir }}'
                git commit -m "bootstrap handover
                {{ repo_status.stdout_lines | join(' ')
                | regex_replace('host_vars/', '') }}"

#
# Only cleanly transferred managed nodes will be removed automatically.
# When reinstalling existing nodes so that previously existing target
# host_vars are retained, the bootstrap inventory must be updated manually. 
#
- name: Remove managed nodes from the bootstrap inventory
  with_items: "{{ managed_host_vars.results }}"
  when: item|changed
  local_action: command chdir="{{ inventory_dir }}"
                sed -i '/^{{ item.item }}/d' bootstrap
