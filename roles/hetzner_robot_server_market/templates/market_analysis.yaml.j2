# file: hetzner_server_market_{{ current_date_time }}_analysis.yaml
---

date_time: {{ current_date_time }}

server_market:
{{ server_market | to_nice_yaml(indent=2) | indent(2, true) }}

server_market_analysis:
{% for item in hetzner_robot_server_market | list %}

- product:
    datacenter:    '{{ item.product.datacenter }}'
    name:          '{{ item.product.name }}'
    id:            '{{ item.product.id }}'
    cpu:           '{{ item.product.cpu | regex_replace(' - Red.PS', '') }}'
    psu:           '{{ "Red.PS" if "Red.PS" in item.product.cpu else "" }}'
    cpu_benchmark: {{ item.product.cpu_benchmark }}
    memory_size:   {{ item.product.memory_size }}

    price:         {{ item.product.price | float | round(2) }}
    price_setup:   {{ item.product.price_setup | float | round(2) }}

    memory_module_counts: {{ item.product.description | select("search", "RAM") | list
    | map("regex_replace", "RAM\\s?", "") | map("regex_replace", "^([0-9]+)x.*$", "\\1") | list | to_yaml }}
    memory_module_sizes: {{ item.product.description | select("search", "RAM") | list
    | map("regex_replace", "RAM\\s?", "") | map("regex_replace", "^.*\\s+([0-9,]+)\\s*[MGT]B.*$", "\\1") | map("regex_replace", ",", ".") | list | to_yaml }}
    memory_module_units: {{ item.product.description | select("search", "RAM") | list
    | map("regex_replace", "RAM\\s?", "") | map("regex_replace", "^.*\\s+[0-9,]+\\s*([MGT]B).*$", "\\1") | list | to_yaml }}
    memory_module_types: {{ item.product.description | select("search", "RAM") | list
    | map("regex_replace", "(RAM\\s?|\\.*$)", "") | map("regex_replace", "\\s[0-9,]+\\s*[MGT]B", "")
    | map("regex_replace", "^[0-9]+x\\s+(.*)$", "\\1") | list | to_yaml }}

    hdd_sata_counts: {{ item.product.description | select("search", "HDD.*SATA") | list
    | map("regex_replace", "(HDD|SATA)\\s?", "") | map("regex_replace", "^([0-9]+)x.*$", "\\1") | list | to_yaml }}
    hdd_sata_sizes: {{ item.product.description | select("search", "HDD.*SATA") | list
    | map("regex_replace", "(HDD|SATA)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+([0-9,]+)\\s+.*$", "\\1") | map("regex_replace", ",", ".") | list | to_yaml }}
    hdd_sata_units: {{ item.product.description | select("search", "HDD.*SATA") | list
    | map("regex_replace", "(HDD|SATA)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+([GT]B).*$", "\\1") | list | to_yaml }}
    hdd_sata_types: {{ item.product.description | select("search", "HDD.*SATA") | list
    | map("regex_replace", "(HDD|SATA)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+[GT]B\\s*(.*)$", "\\1") | list | to_yaml }}

    hdd_sas_counts: {{ item.product.description | select("search", "HDD.*SAS") | list
    | map("regex_replace", "(HDD|SAS)\\s?", "") | map("regex_replace", "^([0-9]+)x.*$", "\\1") | list | to_yaml }}
    hdd_sas_sizes: {{ item.product.description | select("search", "HDD.*SAS") | list
    | map("regex_replace", "(HDD|SAS)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+([0-9,]+)\\s+.*$", "\\1") | map("regex_replace", ",", ".") | list | to_yaml }}
    hdd_sas_units: {{ item.product.description | select("search", "HDD.*SAS") | list
    | map("regex_replace", "(HDD|SAS)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+([GT]B).*$", "\\1") | list | to_yaml }}
    hdd_sas_types: {{ item.product.description | select("search", "HDD.*SAS") | list
    | map("regex_replace", "(HDD|SAS)\\s?", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+[GT]B\\s*(.*)$", "\\1") | list | to_yaml }}

    ssd_sata_counts: {{ item.product.description | select("search", "SSD") | list
    | map("regex_replace", "(SSD|SATA)", "") | map("regex_replace", "^([0-9]+)x.*$", "\\1") | list | to_yaml }}
    ssd_sata_sizes: {{ item.product.description | select("search", "SSD") | list
    | map("regex_replace", "(SSD|SATA)", "") | map("regex_replace", "^[0-9]+x\\s+([0-9,]+)\\s+.*$", "\\1") | map("regex_replace", ",", ".") | list | to_yaml }}
    ssd_sata_units: {{ item.product.description | select("search", "SSD") | list
    | map("regex_replace", "(SSD|SATA)", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+([GT]B).*$", "\\1") | list | to_yaml }}
    ssd_sata_types: {{ item.product.description | select("search", "SSD") | list
    | map("regex_replace", "(SSD|SATA)", "") | map("regex_replace", "^[0-9]+x\\s+[0-9,]+\\s+[GT]B\\s*(.*)$", "\\1") | list | to_yaml }}
    raid_controllers: {{ item.product.description | select("search", "RAID")
    | map("regex_replace", "accesoires\\s*", "")
    | map("regex_replace", "RAID [Cc]ontroller\\s*", "")
    | map("regex_replace", "\\([0-9A-Z-]+\\)", "")
    | map("regex_replace", "\\s\\s+", " ")
    | list | to_yaml }}

    nics: {{ item.product.description | select("search", "NIC")
    | map("regex_replace", "(NIC|PCI-E|PCIe|PCI)\\s?", "")
    | map("regex_replace", "1000Mbit", "1 Gbit")
    | map("regex_replace", "\\sPro/?1000\\s?GT", "")
    | map("regex_replace", "\\((.*)\\)", "\\1")
    | map("regex_replace", "\\sCT Desktop Adapter", "")
    | map("regex_replace", "\\s-?\\s+", " ")
    | list | to_yaml }}
    traffic:       '{{ item.product.traffic }}'
    network_speed: '{{ item.product.network_speed }}'

    misc: {{ item.product.description
    | reject("search", item.product.cpu)
    | reject("search", "RAM")
    | reject("search", "HDD.*SATA")
    | reject("search", "HDD.*SAS")
    | reject("search", "SSD")
    | reject("search", "RAID")
    | reject("search", "Redundante Stromversorgung")
    | reject("search", "NIC")
    | list | to_yaml }}
    text: '{{ (item.product.hdd_text
    | regex_replace("ECC", "")
    | regex_replace("DC SSD", "")
    | regex_replace("ENT.HDD", "")
    | regex_replace("SAS", "")
    | regex_replace("HWR", "")
    | regex_replace("INIC", "")
    | regex_replace("\\+([0-9]+x)?[0-9]+[GT]B(\\s(DC SSD|SSD|SAS)|)", "")
    | string).strip() }}'
{% endfor %}
