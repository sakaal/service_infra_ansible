# file: roles/update_all/tasks/main.yaml
---

- when: ansible_pkg_mgr == "apt"
  include: apt.yaml

- when: ansible_pkg_mgr == "yum"
  include: yum.yaml

- when: ansible_pkg_mgr == "dnf"
  include: dnf.yaml

- name: Check if anything changed
  set_fact:
    update_all_changed: "{{ update_all_apt is changed or
                            update_all_yum is changed or
                            update_all_dnf is changed }}"

#
# https://github.com/ansible/ansible/issues/10616
#
- name: Restart hosts
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool
  become: yes
  shell: sleep 2 && shutdown -r now "Ansible triggered"
  async: 1
  poll: 0
  ignore_errors: True

- name: End multiplexed SSH connections to restarted hosts
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool
  local_action: command ssh -O stop
                {{ ansible_user }}@{{ inventory_hostname }}
  ignore_errors: True

- name: Give time for hosts to shut down
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool
  pause: seconds=40

- name: Wait for hosts to restart
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool
  local_action: command ssh -A
                -o BatchMode=yes
                -o ConnectTimeout=10
                -o StrictHostKeyChecking=no
                -o PasswordAuthentication=no
                {{ ansible_user }}@{{ inventory_hostname }}
                echo hello
  register: ssh_echo
  retries: 20
  delay: 15
  until: ssh_echo.stdout.find('hello') != -1

- name: Wait for configured ports if any
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool
  with_items: "{{ reboot_wait_for | default([]) }}"
  wait_for:
    port: "{{ item.port | default (omit) }}"
    timeout: "{{ item.timeout | default(omit) }}"
    search_regex: "{{ item.search_regex | default (omit) }}"
  retries: 20
  delay: 15
  register: result
  until: result|succeeded
  ignore_errors: no

- name: Wait for configured URIs if any
  with_items: "{{ reboot_uris | default([]) }}"
  when: reboot_after_update | default(False) | bool and
        update_all_changed | bool and
        item.run_when | default (True) | bool
  uri:
    url: "{{ item.url | default(omit) }}"
    timeout: "{{ item.timeout | default(omit) }}"
    status_code: "{{ item.status_code | default(omit) }}"
    validate_certs: "{{ item.validate_certs | default(omit) }}"
  retries: 20
  delay: 5
  register: result
  until: result|succeeded
  ignore_errors: no
